name: build-and-test

on: ["push", "pull_request"]

jobs:
  build-and-test:
    strategy:
      matrix:
        config:
        - {name: "Ubuntu 20.04 (GCC)", os: "ubuntu-20.04", CC: "gcc", CXX: "g++"}
        - {name: "Ubuntu 20.04 (Clang)", os: "ubuntu-20.04", CC: "clang", CXX: "clang++"}

    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}

    steps:
    - name: Install dependencies
      env:
        DEBIAN_FRONTEND: "noninteractive"
      run: sudo apt-get update && sudo apt-get install -y build-essential cmake ffmpeg imagemagick lcov libavformat-dev libexiv2-dev libimage-exiftool-perl libjpeg-dev libjpeg-progs liblog4cplus-dev qtbase5-dev

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build-and-Test - Create build directory
      run: mkdir -p ${{github.workspace}}/build

    - name: Build-and-Test - Configure build for testing
      env:
        CC: ${{matrix.config.CC}}
        CXX: ${{matrix.config.CXX}}
      working-directory: ${{github.workspace}}/build
      run: cmake -DENABLE_TEST=ON ..

    - name: Build-and-Test - Build
      working-directory: ${{github.workspace}}/build
      run: make -j$(nproc)

    - name: Build-and-Test - Run tests
      working-directory: ${{github.workspace}}/build
      run: ctest --rerun-failed --output-on-failure

    - name: Coverage - Cleanup build directory
      run: |
        rm -rf ${{github.workspace}}/build
        mkdir -p ${{github.workspace}}/build
      if: matrix.config.CC == 'gcc'

    - name: Coverage - Configure build for coverage
      working-directory: ${{github.workspace}}/build
      run: cmake -DENABLE_COVERAGE=ON ..
      if: matrix.config.CC == 'gcc'

    - name: Coverage - Build
      working-directory: ${{github.workspace}}/build
      run: make -j$(nproc)
      if: matrix.config.CC == 'gcc'

    - name: Coverage - Analyze test coverage
      working-directory: ${{github.workspace}}/build
      run: make coverage
      if: matrix.config.CC == 'gcc'

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        path-to-lcov: ${{github.workspace}}/build/coverage/trace.info
      if: matrix.config.CC == 'gcc'
